- In this lesson, we'll be focused on the value of Pandas,
the primary data analysis library in Python.
By the end of this video, you should be able to
describe the value of pandas to data science in Python,
highlight the key data structures of Pandas,
and discuss the capabilities of Pandas
that has resulted in its widespread adoption
as a tool for analytics.
Pandas library provides a number
of data analysis-friendly features,
which made it one of the most popular data science tools.
Pandas builds up NumPy, so most of the NumPy advantages
still hold true.
However, it uniquely enables ingestion and manipulation
of heterogeneous data types in an intuitive fashion.
Pandas also enables combining large data sets
using merge and join.
And it provides a very efficient library
for breaking data sets, transforming, and recombining.
Another great feature Pandas provides is its visualizations.
Plugged-in data has been simplified
in-built functions that come with data frame.
And descriptive statistics, by using simple function,
is another good part of Pandas.
This capability really simplifies
the exploratory data analysis,
as well as communication of results.
Additionally, Pandas library handles
time-series data effectively via native methods
it provides to ingest, transform, and analyze
time-series data.
Other benefits to using Pandas are
the ability to take advantage of native methods
to handle missing data and data pivoting,
easy data sorting, and description capabilities,
fast generation of data plots,
and Boolean indexing for fast image processing
and other masking operations, just to name a few.
Pandas achieves this thanks to two data structures.
Namely, pandas Series and pandas DataFrame.
A series is one one-dimensional array-like object
that provides us with many ways to index data.
Series acts like an ndarray,
but it supports many data types,
integers, strings, floating point numbers,
Python objects, et cetera, as a part of the array.
It is a valid argument to most NumPy methods
because of its similarities to arrays.
The axis labels are collectively referred to as the index,
and we can get and set values by these index labels.
So a series is like a fit sized dictionary in this regard.
But it's very flexible.
Although series is a flexible data structure,
the data structure that gets used even more
is pandas DataFrame.
A DataFrame is a 2-D elastic data structure
that supports heterogeneous data
with labeled axis for rows and columns.
Arithmetic operations can appear
on both row and column labels.
We can think of it as a container for series objects,
where each row is a series.
If you're looking for a functionality
to perform some data transformation,
chances are Pandas already has it.
It provides almost all major data-wrangling capabilities
that data scientists need.
It is actively supported by developer community
and constantly increasing in functionality.
We think Pandas will continue to play
even a larger role in data science process
in the coming decade.
We have just reviewed why the Pandas library in Python
is very useful and talked about
the two data structures in it.
Let's get started with our Pandas notebook
to review these data structures.